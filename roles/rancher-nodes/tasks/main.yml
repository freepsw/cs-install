---

- name: Add host info to /etc/hosts
  include: add_hosts.yml



- name: determine if we're already running an agent
  shell: "docker ps | fgrep -q rancher/agent"
  register: agent_installed
  ignore_errors: true
  changed_when: false
  become: true

# - name: Copy rancher/agent images file to ~/home/user/temp directory
#   copy:
#     src: "{{ docker_image_file_folder }}/{{ rancher_agent_image }}"
#     dest: "{{ remote_temp_directory }}"
#     force: no
# #
# # - name: Load rancher/agent image from archive
# #   docker_image:
# #     name: rancher/server
# #     load_path: "{{ remote_temp_directory }}/{{ rancher_agent_image }}"
# #   when: agent_installed|failed
#
# - name: Load image from archive and push to a private registry
#   docker_image:
#     name: "rancher/agent"
#     repository: "{{ docker_registry_url }}/rancher/agent"
#     tag: "{{ rancher_agent_version }}"
#     push: yes
#     load_path: "{{ remote_temp_directory }}/{{ rancher_agent_image }}"

- name: Check wheather rancher-server is running
  action: uri
      method=GET
      status_code=200
      url="http://{{ rancher_ip }}:{{ rancher_port }}" return_content=yes
  register: output_msg
  until: output_msg.status == 200
  retries: 100
  delay: 2

- name: Get the default project id
  action: uri
      method=GET
      status_code=200
      url="http://{{ rancher_ip }}:{{ rancher_port }}/v1/projects" return_content=yes
  register: project_id



- name: Return the registration token URL of Rancher server
  action: uri
      method=POST
      status_code=201
      url="http://{{ rancher_ip }}:{{ rancher_port }}/v1/registrationtokens?projectId={{ project_id.json['data'][0]['id'] }}" return_content=yes
  register: rancher_token_url

- name: Return the registration URL of Rancher server
  action: uri
      method=GET
      url={{ rancher_token_url.json['links']['self'] }} return_content=yes
  register: rancher_token

- name: Check if the rancher-agent is running
  command: "docker ps -a"
  register: containers
  become: true


- name: print ip
  debug: msg="{{ rancher_token.json['image'] }}"

- name: Register the Host machine with the Rancher server
  docker_container:
      name: "{{ rancher_agent_name }}"
      image: "{{ docker_registry_url }}/{{ rancher_token.json['image'] }}"
      privileged: yes
      detach: True
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/rancher:/var/lib/rancher
      command: "{{ rancher_token.json['registrationUrl'] }}"
      state: started
  when: "{{ 'rancher-agent' not in containers.stdout }}"
  become: true
